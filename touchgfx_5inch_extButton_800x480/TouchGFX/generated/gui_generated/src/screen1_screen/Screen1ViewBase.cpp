/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(2, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(217, 2, 213));
    add(box1);

    buttonWithLabel1.setXY(55, 31);
    buttonWithLabel1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    buttonWithLabel1.setLabelText(touchgfx::TypedText(T___SINGLEUSE_F15A));
    buttonWithLabel1.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel1.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonWithLabel1.setAction(buttonCallback);
    add(buttonWithLabel1);

    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_BACKGROUNDS_ACTIVE_FILLED_ID));
    gauge1.setPosition(310, 42, 240, 240);
    gauge1.setCenter(119, 119);
    gauge1.setStartEndAngle(-117, 121);
    gauge1.setRange(0, 100);
    gauge1.setValue(60);
    gauge1.setEasingEquation(touchgfx::EasingEquations::linearEaseIn);
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_NEEDLES_ROUGH_ID, 9, 64);
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge1.setArcVisible();
    gauge1Painter.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_FILLERS_SWOOP_ID));
    gauge1.getArc().setPainter(gauge1Painter);
    gauge1.getArc().setRadius(100);
    gauge1.getArc().setLineWidth(99);
    gauge1.getArc().setCapPrecision(180);
    gauge1.setArcPosition(23, 23, 192, 142);
    add(gauge1);

    dynamicGraph1.setPosition(537, 290, 233, 156);
    dynamicGraph1.setScale(1);
    dynamicGraph1.setGraphAreaMargin(0, 0, 0, 0);
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
    dynamicGraph1.setGraphRangeY(0, 100);
    dynamicGraph1MajorXAxisLabel.setInterval(10);
    dynamicGraph1MajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_EK84));
    dynamicGraph1MajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    dynamicGraph1MajorXAxisLabel.setScale(1);
    dynamicGraph1.addBottomElement(dynamicGraph1MajorXAxisLabel);

    dynamicGraph1MajorYAxisLabel.setInterval(10);
    dynamicGraph1MajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_7IVT));
    dynamicGraph1MajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    dynamicGraph1MajorYAxisLabel.setScale(1);
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);

    dynamicGraph1Line1Painter.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    dynamicGraph1Line1.setPainter(dynamicGraph1Line1Painter);
    dynamicGraph1Line1.setLineWidth(2);
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);


    dynamicGraph1.addDataPoint(1.20009f);
    dynamicGraph1.addDataPoint(6.00599f);
    dynamicGraph1.addDataPoint(16.46147f);
    dynamicGraph1.addDataPoint(30.07688f);
    dynamicGraph1.addDataPoint(43.79029f);
    dynamicGraph1.addDataPoint(54.70633f);
    dynamicGraph1.addDataPoint(60.78668f);
    dynamicGraph1.addDataPoint(61.32378f);
    dynamicGraph1.addDataPoint(57.08298f);
    dynamicGraph1.addDataPoint(50.07938f);
    dynamicGraph1.addDataPoint(43.04549f);
    dynamicGraph1.addDataPoint(38.72169f);
    dynamicGraph1.addDataPoint(39.14469f);
    dynamicGraph1.addDataPoint(45.10982f);
    dynamicGraph1.addDataPoint(55.94056f);
    dynamicGraph1.addDataPoint(69.62283f);
    dynamicGraph1.addDataPoint(83.27276f);
    dynamicGraph1.addDataPoint(93.82415f);
    dynamicGraph1.addDataPoint(98.76818f);
    dynamicGraph1.addDataPoint(96.7647f);
    dynamicGraph1.addDataPoint(87.97552f);
    dynamicGraph1.addDataPoint(74.03788f);
    dynamicGraph1.addDataPoint(57.68412f);
    dynamicGraph1.addDataPoint(42.09985f);
    dynamicGraph1.addDataPoint(30.17657f);
    dynamicGraph1.addDataPoint(23.84062f);
    dynamicGraph1.addDataPoint(23.62111f);
    dynamicGraph1.addDataPoint(28.56111f);
    dynamicGraph1.addDataPoint(36.49228f);
    dynamicGraph1.addDataPoint(44.6039f);
    dynamicGraph1.addDataPoint(50.16577f);
    dynamicGraph1.addDataPoint(51.22626f);
    dynamicGraph1.addDataPoint(47.11365f);
    dynamicGraph1.addDataPoint(38.61708f);
    dynamicGraph1.addDataPoint(27.80196f);
    dynamicGraph1.addDataPoint(17.50491f);
    dynamicGraph1.addDataPoint(10.63172f);
    dynamicGraph1.addDataPoint(9.43058f);
    dynamicGraph1.addDataPoint(14.91911f);
    dynamicGraph1.addDataPoint(26.60635f);
    dynamicGraph1.addDataPoint(42.57898f);
    dynamicGraph1.addDataPoint(59.93196f);
    dynamicGraph1.addDataPoint(75.43969f);
    dynamicGraph1.addDataPoint(86.305f);
    dynamicGraph1.addDataPoint(90.80407f);
    dynamicGraph1.addDataPoint(88.67123f);
    dynamicGraph1.addDataPoint(81.13063f);
    dynamicGraph1.addDataPoint(70.56856f);
    dynamicGraph1.addDataPoint(59.92767f);
    dynamicGraph1.addDataPoint(51.97227f);
    dynamicGraph1.addDataPoint(48.60524f);
    dynamicGraph1.addDataPoint(50.40385f);
    dynamicGraph1.addDataPoint(56.48834f);
    dynamicGraph1.addDataPoint(64.75481f);
    dynamicGraph1.addDataPoint(72.41481f);
    dynamicGraph1.addDataPoint(76.70855f);
    dynamicGraph1.addDataPoint(75.6158f);
    dynamicGraph1.addDataPoint(68.38921f);
    dynamicGraph1.addDataPoint(55.77769f);
    dynamicGraph1.addDataPoint(39.88378f);
    dynamicGraph1.addDataPoint(23.68811f);
    dynamicGraph1.addDataPoint(10.35596f);
    dynamicGraph1.addDataPoint(2.4942f);
    dynamicGraph1.addDataPoint(1.53922f);
    dynamicGraph1.addDataPoint(7.42474f);
    dynamicGraph1.addDataPoint(18.60997f);
    dynamicGraph1.addDataPoint(32.46089f);
    dynamicGraph1.addDataPoint(45.89091f);
    dynamicGraph1.addDataPoint(56.10449f);
    dynamicGraph1.addDataPoint(61.2619f);
    dynamicGraph1.addDataPoint(60.90336f);
    dynamicGraph1.addDataPoint(56.02953f);
    dynamicGraph1.addDataPoint(48.82018f);
    dynamicGraph1.addDataPoint(42.06114f);
    dynamicGraph1.addDataPoint(38.42156f);
    dynamicGraph1.addDataPoint(39.75996f);
    dynamicGraph1.addDataPoint(46.63063f);
    dynamicGraph1.addDataPoint(58.11278f);
    dynamicGraph1.addDataPoint(72.00559f);
    dynamicGraph1.addDataPoint(85.34276f);
    dynamicGraph1.addDataPoint(95.10136f);
    dynamicGraph1.addDataPoint(98.93233f);
    dynamicGraph1.addDataPoint(95.734f);
    dynamicGraph1.addDataPoint(85.92831f);
    dynamicGraph1.addDataPoint(71.37194f);
    dynamicGraph1.addDataPoint(54.92341f);
    dynamicGraph1.addDataPoint(39.77134f);
    dynamicGraph1.addDataPoint(28.68717f);
    dynamicGraph1.addDataPoint(23.38406f);
    dynamicGraph1.addDataPoint(24.13731f);
    dynamicGraph1.addDataPoint(29.75777f);
    dynamicGraph1.addDataPoint(37.92301f);
    dynamicGraph1.addDataPoint(45.78369f);
    dynamicGraph1.addDataPoint(50.69505f);
    dynamicGraph1.addDataPoint(50.89318f);
    dynamicGraph1.addDataPoint(45.94923f);
    dynamicGraph1.addDataPoint(36.8896f);
    dynamicGraph1.addDataPoint(25.95196f);
    dynamicGraph1.addDataPoint(16.03664f);
    dynamicGraph1.addDataPoint(9.98762f);
    add(dynamicGraph1);

    buttonWithIcon1.setXY(615, 56);
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_COMMUNICATION_ADD_IC_CALL_50_50_D60B0B_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_ACCOUNT_BALANCE_50_50_53FF19_SVG_ID));
    buttonWithIcon1.setIconXY(30, 0);
    buttonWithIcon1.setAction(buttonCallback);
    add(buttonWithIcon1);

    radioButton1.setXY(79, 150);
    radioButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_OFF_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_RADIOBUTTON_RADIO_MEDIUM_ROUNDED_ON_PRESSED_ID));
    radioButton1.setSelected(true);
    radioButton1.setDeselectionEnabled(false);
    radioButtonGroup1.add(radioButton1);
    add(radioButton1);

    buttonWithIcon2.setXY(626, 143);
    buttonWithIcon2.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_012E00_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    buttonWithIcon2.setIconXY(30, 0);
    buttonWithIcon2.setAction(buttonCallback);
    add(buttonWithIcon2);

    analogClock1.setXY(61, 222);
    analogClock1.setBackground(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_ANALOGCLOCK_BACKGROUNDS_SMALL_GLOSSY_GRADIENT_ID, 120, 120);
    analogClock1.setupSecondHand(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_ANALOGCLOCK_HANDS_SMALL_SECOND_GLOSSY_GRADIENT_ID, 2, 100);
    analogClock1.setupMinuteHand(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_ANALOGCLOCK_HANDS_SMALL_MINUTE_GLOSSY_GRADIENT_ID, 10, 87);
    analogClock1.setMinuteHandSecondCorrection(false);
    analogClock1.setupHourHand(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_ANALOGCLOCK_HANDS_SMALL_HOUR_GLOSSY_GRADIENT_ID, 9, 69);
    analogClock1.setHourHandMinuteCorrection(false);
    analogClock1.initializeTime24Hour(10, 10, 0);
    analogClock1.setAnimation(10, touchgfx::EasingEquations::backEaseOut);
    add(analogClock1);
}

Screen1ViewBase::~Screen1ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithLabel1)
    {
        //Interaction3
        //When buttonWithLabel1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenSlideTransitionEast();
    }
    if (&src == &buttonWithIcon1)
    {
        //Interaction4
        //When buttonWithIcon1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenCoverTransitionEast();
    }
    if (&src == &buttonWithIcon2)
    {
        //Interaction5
        //When buttonWithIcon2 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenWipeTransitionEast();
    }
}

void Screen1ViewBase::handleKeyEvent(uint8_t key)
{
    if(1 == key)
    {
        //Interaction1
        //When hardware button 1 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenCoverTransitionEast();
    
    }

    if(2 == key)
    {
        //Interaction2
        //When hardware button 2 clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenCoverTransitionEast();
    
    }
}
